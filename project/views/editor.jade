extends ../node_modules/jade-bootstrap/_bootstrap
append styles
    link(href='stylesheets/style.css', rel='stylesheet')
block body
  h1  Comic Editor
  body
    .container-fluid 
        .row
            .col-sm-2
                    .panel.panel-success
                        .panel-heading Comic Fields
                        .panel-body
                            form#formUpdateComicField(name="updateField", method="post", action="/updateField")
                            textarea#inputTitle(type="text", placeholder="Title",name="comicTitle", style="width:100%;resize:none;height:1%")
                            br
                            textarea#inputDescription(placeholder="Description",name="comicDescription", style="height: 200px;resize: none;width:100%;")
                            br
                            textarea#inputTags(type="text", placeholder="Tags",name="comicTags",style="width:100%;resize:none;height:1%")
                            br
                            button#buttonSave(type="submit") Save Field
                            br
                            br
                    .panel.panel-success
                        .panel-heading Upload Image
                        .panel-body                        
                            input#imgLoader(type="file" accept="image/*")
                            button(onClick="saveCanvasinJson()") Save
                            button(onClick="loadCanvas()") Load
            .col-sm-10
                h2 Comic Panels
                    // speech bubble buttons
                    h3 Temp Toolbar
                    .panel-body
                        button(onClick="bubbleButton()") Speech Bubble
                        button(onClick="squareButton()") Square Bubble
                        button(onClick="thoughtButton()") Thought Bubble
                        textarea#dialogue(name="dialogue", placeholder="dialogue")
                        button(onClick="addText()") Add Text
                        .container
                            style
                            .row
                                .col-lg-3
                                    canvas#panel1(name="panel1", width="400",height="400",style="border: 1px solid black;")
                                .col-lg-3
                                    canvas#panel2(name="panel2", width="400",height="400",style="border: 1px solid black;")
                                .col-lg-3
                                    canvas#panel3(name="panel3", width="400",height="400",style="border: 1px solid black;")
                                .col-lg-3
                                    canvas#panel4(name="panel4", width="400",height="400",style="border: 1px solid black;")
block scripts
  script(src="https://rawgit.com/kangax/fabric.js/master/dist/fabric.js")
  script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js") 
   // reference:http://jsfiddle.net/jaibuu/Vp6wa/
  script(type="text/javascript", src="modules/Editor.js")
  script(type="text/javascript").

    // speech bubble implementation here:
    // the 4 panels have been instantiated as canvases here
    canvas1 = new fabric.Canvas('panel1');
    canvas2 = new fabric.Canvas('panel2');
    canvas3 = new fabric.Canvas('panel3');
    canvas4 = new fabric.Canvas('panel4');
    // add text
    function addText() {
      var textArea = document.getElementById("dialogue").value;
      var textToAdd = new fabric.Text(textArea, {
        fontFamily: 'Comic Sans'
      });
      canvas1.add(textToAdd);
    }

    // imported images from placeholder imgur URL
    // TODO: need to have images on server and load from there
    // button switches for speech bubble
    var bubble = 'http://i.imgur.com/qtDmgzK.png';
    var square = 'http://i.imgur.com/Co7HFts.png';
    var thought = 'http://i.imgur.com/EZruJfs.png';
    var bubbleSelect = false;
    var squareSelect = false;
    var thoughtSelect = false;
    var speech;

    function bubbleButton() {
      bubbleSelect = true;
      squareSelect = false;
      thoughtSelect = false;

      if (bubbleSelect) {
        speech = bubble;
      } else {
        speech = null;
      }

      fabric.Image.fromURL(speech, function(b) {
        canvas1.on('mouse:up', function(b1){
          canvas1.add(b);
        });
        canvas2.on('mouse:up', function(b2){
          canvas2.add(b);
        });
        canvas3.on('mouse:up', function(b3){
          canvas3.add(b);
        });
        canvas4.on('mouse:up', function(b4){
          canvas4.add(b);
        });
      });
    }

    function squareButton() {
      bubbleSelect = false;
      squareSelect = true;
      thoughtSelect = false;

      if (squareSelect) {
        speech = square;
      } else {
        speech = null;
      }

      fabric.Image.fromURL(speech, function(s) {
        canvas1.on('mouse:up', function(s1){
          canvas1.add(s);
        });
        canvas2.on('mouse:up', function(s2){
          canvas2.add(s);
        });
        canvas3.on('mouse:up', function(s3){
          canvas3.add(s);
        });
        canvas4.on('mouse:up', function(s4){
          canvas4.add(s);
        });
      });
    }
    
    function thoughtButton() {
      bubbleSelect = false;
      squareSelect = false;
      thoughtSelect= true;

      if (thoughtSelect) {
        speech = thought;
      } else {
        speech = null;
      }
      fabric.Image.fromURL(speech, function(t) {
        canvas1.on('mouse:up', function(t1){
          canvas1.add(t);
        });
        canvas2.on('mouse:up', function(t2){
          canvas2.add(t);
        });
        canvas3.on('mouse:up', function(t3){
          canvas3.add(t);
        });
        canvas4.on('mouse:up', function(t4){
          canvas4.add(t);
        });
      });
    }

    var json;
     function saveCanvasinJson(){
        json = JSON.stringify(canvas);
        canvas.clear();
    }
    
    function loadCanvas(){
        canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));
    }
    


